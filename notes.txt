
// digital ocean
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-16-04


/usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l logfile start
service postgresql start


play: https://play.golang.org/p/DlafU_R_phq

on parentheses in golang function signatures:

The first is the recipient (target object) of the call. 
The second is the arguments. 
The third only applies if there are multiple return types. 
Have no fear that is it. There are more substantial concerns that you should consider:


https://blog.golang.org/go-maps-in-action


https://www.postgresql.org/docs/9.5/static/dml-returning.html


https://stackoverflow.com/questions/23350173/how-do-you-loop-through-the-fields-in-a-golang-struct-to-get-and-set-values-in-a/23351753


I will quote one smart dude:

& in front of variable name is used to retrieve the address of where this variableâ€™s value is stored. That address is what the pointer is going to store.

* in front of a type name, means that the declared variable will store an address of another variable of that type (not a value of that type).

* in front of a variable of pointer type is used to retrieve a value stored at given address. In Go speak this is called dereferencing.

source: http://piotrzurek.net/2013/09/20/pointers-in-go.html

0Flick90